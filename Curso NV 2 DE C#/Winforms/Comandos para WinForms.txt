

 
button:

.Modificar el valor de la propiedad Opacity.
Al modificar esa prop en este caso del formulario, le da menos visibilidad, como mas transparente

. Coloco un icono al Control Button, con la propiedad Image. 

al boton le asignas una imagen de fondo guardada en la pc

. Deshabilitar el Control Button, con la propiedad Enabled. 

deshabilitas el boton, si esta en false queda deshabilitado, true es normal


Al dispararse el evento Click, se cambie el color del Formulario.
private void btnBoton_Click(object sender, EventArgs e)
{

 this.BackColor = Color.Blue;
} 



Manejar el evento Click .del Formulario. Determinar que botón del Mouse se pulso. 

private void Form1_Click(object sender, EventArgs e)
{
MouseEventArgs click = (MouseEventArgs)e;
if (click.Button == MouseButtons.Left)
MessageBox.Show("Presiono el botón Izquierdo", "Atención");
else if (click.Button == MouseButtons.Right)
MessageBox.Show("Presiono el Botón Derecho", "Atención"); else
if (click.Button == MouseButtons.Middle)
MessageBox.Show("Presiono el botón del Medio", "Atención"); 



Label / ETIQUETA:


 Cambiamos el color de la propiedad BackColor.

 Mouse Move SIGNIFICA movimiento del ratón

private void lblEtiqueta_MouseMove(object sender, MouseEventArgs e)
{
 lblEtiqueta.BackColor = Color.Cyan;
} 
 
lo que hace justamente es cambiar el back color osea el color de fondo de la etiqueta




.Al dispararse el evento MouseLeave, se restablezca el color de fondo de la etiqueta.

Mouse leave significa dejar el ratón

private void lblEtiqueta_MouseLeave(object sender, EventArgs e)
{
 lblEtiqueta.BackColor = System.Drawing.SystemColors.Control;
} 




TEXT BOX / CAJA DE TEXTO:
Cambiamos la cantidad de Caracteres que acepta el Control TextBox, con la
propiedad MaxLength.

 Cambiamos la propiedad CharacterCasing del Control TextBox, para que cambie a
mayúsculas los caracteres que se ingresan. ( UPPER ES MAYUSCULAS, LOWER MINISCULAS)



En el evento Click del botón creado anteriormente, cancelamos las líneas de código
anteriores y colocamos el código para cambiar el color de fondo del TextBox
(Propiedad BackColor) si el TextBox se encuentra vació.

private void btnBoton_Click(object sender, EventArgs e)
{
if (txtApellido.Text == "")
 txtApellido.BackColor = Color.Red;
 else
 txtApellido.BackColor = System.Drawing.SystemColors.Control;
 	
}

esto significa que podemos jugar con los controladores, por ejemplo desde el click modificar el control caja de texto
por ej si ponemos "APELLIDO" en las "" el if va a ir por la primer opcion, la idea es jugar con el código




Manejar el evento KeyPress, para ingresar solo Números
private void txtApellido_KeyPress(object sender, KeyPressEventArgs e)
{
if ((e.KeyChar < 48 || e.KeyChar > 59) && e.KeyChar != 8)
 e.Handled = true;
}

 preguntar que hace este metodo


En el contexto de un evento de teclado en C#, como KeyPress, la propiedad e.Handled se utiliza para indicar si el control de eventos ha manejado completamente el evento o si debe permitir que el sistema continúe procesándolo.

Cuando se establece e.Handled en true, estás indicando que has manejado completamente el evento y que el sistema no debe realizar ninguna acción adicional asociada con ese evento. En el código que proporcionaste:
La función está manejando el evento KeyPress del control txtApellido. Está verificando si la tecla presionada no es un número (dígito) o la tecla de retroceso (Backspace). Si no es un número ni la tecla de retroceso, entonces e.Handled se establece en true. Esto significa que cualquier acción predeterminada asociada con la tecla presionada (como agregar el carácter al cuadro de texto) se evitará, ya que has manejado completamente el evento al establecer e.Handled en true.



Colocar en True la propiedad Multiline del nuevo Control TextBox. (Run) 

La propiedad Multiline de un control TextBox en C# se utiliza para indicar si el cuadro de texto debe permitir la entrada de varias líneas de texto o solo una línea.

Cuando Multiline se establece en true, el TextBox puede contener y mostrar varias líneas de texto. Puedes ingresar texto en varias líneas presionando la tecla "Enter". El control de texto se expandirá verticalmente para acomodar las múltiples líneas.

Cuando Multiline está establecido en false (su valor predeterminado), el TextBox solo permitirá la entrada de una línea de texto. Presionar "Enter" generalmente activará algún otro control, como un botón predeterminado o moverá el enfoque al siguiente control.





